{"version":3,"sources":["Components/MainPage.js","Components/Login.js","Redux/Actions/LoginAction.js","App.js","reportWebVitals.js","Redux/Reducers/LoginReducer.js","Redux/Reducers/index.js","Redux/Store.js","index.js"],"names":["columns","field","headerName","width","description","sortable","rows","ID","Description","Name","Price","Unit","Tax","ExchangeRate","FinalPayment","MainPage","state","useSelector","loginDetails","useState","visibilitySetting","setVisibility","useEffect","console","log","loginType","style","height","Button","color","variant","getRowId","checkboxSelection","Link","component","fontWeight","href","Login","lLoginContent","isLoggedIn","userId","name","email","picture","setLoginState","dispatch","useDispatch","responseGoogle","response","profileObj","userID","imageUrl","type","payload","appId","autoLoad","fields","callback","status","data","url","clientId","buttonText","onSuccess","onFailure","cookiePolicy","App","loginInfo","JSON","stringify","undefined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","iState","reducers","combineReducers","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95814eaf.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useEffect,useState } from 'react';\r\n  const columns = [\r\n    { field: 'ID', headerName: 'ID', width: 70 },\r\n  { field: 'Description', headerName: 'Description', width: 70 },\r\n  { field: 'Name', headerName: 'Name', width: 130 },\r\n  { field: 'Price', headerName: 'Price', width: 130 },\r\n  {\r\n    field: 'Unit', headerName: 'Unit', width: 90,\r\n  },\r\n  {\r\n    field: 'Tax',\r\n    headerName: 'Tax',\r\n    description: 'This column has a value getter and is not sortable.',\r\n    sortable: false,\r\n    width: 160,    \r\n  },\r\n  {\r\n    field: 'ExchangeRate',\r\n    headerName: 'ExchangeRate',\r\n    description: 'This column has a value getter and is not sortable.',\r\n    sortable: false,\r\n    width: 160,    \r\n  },\r\n  {\r\n    field: 'FinalPayment',\r\n    headerName: 'FinalPayment',\r\n    description: 'This column has a value getter and is not sortable.',\r\n    sortable: false,\r\n    width: 160,\r\n    // valueGetter: (params) =>\r\n    //   `${params.getValue('FinalPayment') || ''} ${params.getValue('FinalPayment') || ''}`\r\n  }\r\n];\r\n\r\nconst rows = [\r\n  { ID:1, Description: \"Freight\", Name: 'Freight', Price: \"USD 1781\", Unit: \"Per Container\" , Tax: \"-\", ExchangeRate: 1.00, FinalPayment: \"INR 2000\" },\r\n  { ID:2,Description: \"Free In\", Name: 'Free In', Price: \"USD 160\", Unit: \"Per Container\" , Tax: \"-\", ExchangeRate: 1.00, FinalPayment: \"INR 2000\" },\r\n  { ID:3,Description: \"BI Fee\", Name: 'BI Fee', Price: \"TI 175\", Unit: \"Per BI\" , Tax: \"18%\", ExchangeRate: 1.00, FinalPayment: \"INR 2000\" },\r\n  { ID:4,Description: \"Temparary\", Name: 'Temparary Accept', Price: \"USD 140\", Unit: \"Per Container\" , Tax: \"18%\", ExchangeRate: 1.00, FinalPayment: \"INR 2000\" },\r\n  \r\n];\r\n\r\nfunction MainPage() {\r\n    const state = useSelector(state => state.loginDetails.state)\r\n\r\n    const [visibilitySetting, setVisibility] = useState(true)\r\n\r\n    useEffect(() => {\r\n      console.log(state.loginType)\r\n      if(state.loginType==\"google\")\r\n      {\r\n          setVisibility(false)\r\n      }\r\n    }, [])   \r\n    \r\n\r\n    return (\r\n      <div style={{ height: 400, width: '100%' }}>\r\n        {visibilitySetting &&<Button color=\"primary\" variant=\"contained\">\r\n          Group\r\n        </Button>}\r\n        &nbsp;\r\n        {visibilitySetting && <Button color=\"primary\" variant=\"contained\">\r\n         UnGroup\r\n        </Button>}\r\n        {visibilitySetting &&\r\n      <DataGrid getRowId={(rows) => rows.ID} rows={rows} columns={columns}  checkboxSelection />\r\n}\r\n{!visibilitySetting &&\r\n      <DataGrid getRowId={(rows) => rows.ID} rows={rows} columns={columns}   />\r\n}\r\n        \r\n      {visibilitySetting && <Link component=\"button\" variant=\"body2\" style={{fontWeight:'bold'}}>\r\n      + More Changes\r\n    </Link>}\r\n     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n     <Button variant=\"outlined\" color=\"primary\" href=\"#outlined-buttons\">\r\n  Cancel\r\n</Button>\r\n&nbsp;&nbsp;\r\n        <Button color=\"primary\" variant=\"contained\">\r\n          Submit\r\n        </Button>\r\n    </div>\r\n      );\r\n}\r\n\r\nexport default MainPage\r\n","import React,{useState,useEffect} from 'react'\r\nimport FacebookLogin  from 'react-facebook-login' \r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport MainPage from './MainPage';\r\nimport { SaveLoginAction } from '../Redux/Actions/LoginAction'\r\nfunction Login() {\r\n\r\n  const iState = \r\n  {\r\n      isLoggedIn: false,\r\n      userId:'',\r\n      name:'',\r\n      email:'',\r\n      picture :'',\r\n      loginType:''\r\n  }\r\n\r\n  const [state, setLoginState] = useState(iState)\r\n  const  dispatch = useDispatch();\r\n  \r\n\r\n  const responseFacebook = response => {       \r\n    if(response.status!=\"unknown\")\r\n    {\r\n      setLoginState({\r\n      isLoggedIn: true,\r\n      userId: response.userID,\r\n      name: response.name,\r\n      email: response.email,\r\n      picture: response.picture.data.url,\r\n      loginType:'facebook'\r\n    });          \r\n   }   \r\n  };\r\n\r\n  const responseGoogle = (response) => {\r\n    \r\n    setLoginState({\r\n        isLoggedIn : true,\r\n        userId: response.profileObj.userID,\r\n        name : response.profileObj.name,\r\n        email : response.profileObj.email,\r\n        picture : response.profileObj.imageUrl,\r\n        loginType:'google'\r\n    })\r\n    \r\n  }\r\n\r\n  useEffect(() => {      \r\n    \r\n    console.log(state);    \r\n    dispatch(SaveLoginAction(state))\r\n }, [state])\r\n\r\n let lLoginContent;\r\n\r\n if (state.isLoggedIn==true) {\r\n  \r\n  lLoginContent = (\r\n      <>\r\n      <MainPage></MainPage>       \r\n      </>\r\n  );\r\n}\r\nelse\r\n{\r\n  lLoginContent=\"\";  \r\n  lLoginContent= \r\n  (\r\n    <>           \r\n    <FacebookLogin\r\n      appId=\"3689975794561505\"\r\n      autoLoad={false}\r\n      fields=\"name,email,picture\"            \r\n      callback={responseFacebook}\r\n    />\r\n    <br></br>    \r\n            <GoogleLogin\r\n                clientId=\"323037035963-1iach7o2ngnot4g3p34eigskl3m4hq82.apps.googleusercontent.com\"\r\n                buttonText=\"Login\"\r\n                onSuccess={responseGoogle}\r\n                onFailure={responseGoogle}\r\n                cookiePolicy={'single_host_origin'}\r\n              />                   \r\n    </>\r\n  );\r\n}\r\n\r\nreturn lLoginContent;\r\n  \r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\n\r\nexport const SaveLoginAction=(loginState)=>{\r\n    \r\n    return {\r\n        type:'SaveLogin',\r\n        payload:loginState\r\n    }\r\n}\r\n","import './App.css';\nimport { useSelector } from 'react-redux';\nimport Login from './Components/Login';\nimport MainPage from './Components/MainPage';\nfunction App() {\n  const loginInfo = useSelector(state => state.loginDetails.state);\n    console.log(\"loginType In app \"+ JSON.stringify(loginInfo) );\n\nif(loginInfo== undefined || loginInfo.isLoggedIn==false)\n{\n  return <Login></Login>\n}\nelse\n{\n  return <MainPage></MainPage>\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const iState ={\r\n    isLoggedIn: false,\r\n      userId:'',\r\n      name:'',\r\n      email:'',\r\n      picture :'',\r\n      loginType:''\r\n}\r\nexport const SaveLoginReducer =(state=iState,action)=>{\r\n    \r\n    switch (action.type) {\r\n        case 'SaveLogin':\r\n            return {                \r\n                state:action.payload\r\n            }\r\n            break;\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport {SaveLoginReducer} from  \"./LoginReducer\"\r\n\r\nexport const reducers=combineReducers({\r\n    loginDetails:SaveLoginReducer\r\n})","import { createStore } from \"redux\";\r\nimport {reducers} from \"./Reducers/index\"\r\n\r\nconst store = createStore(reducers,{});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './Redux/Store';\nimport { Provider } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}